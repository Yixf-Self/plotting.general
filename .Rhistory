y = 'cyl'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
?modifyList
source('~/local/src/R/plotting.general/R/default.heatmap.theme.R', echo=TRUE)
load_all(pkg = '.');
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
deafult.heatmap.theme
deafult.heatmap.theme()
default.heatmap.theme()
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
theme_get();
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
data(bmmrd);
dir();
library(ShlienLab.BiallelicMismatchRepair)
data(bmmrd);
head(bmmrd);
data <- bmmrd
total.mutations
head(bmmrd);
bmmrd <- filter.mutations(data=bmmrd)
total.mutations <- as.data.frame(table(data$tumor_name));
total.mutations
filter.mutations
total.mutations
filter.mutations <- function(data) {
filtered.data <- data[data$judgement == 'KEEP',]
filtered.data <- filtered.data[filtered.data$dbsnp_site != 'DBSNP', ];
filtered.data <- filtered.data[filtered.data$annovar_dbsnp == "",];
filtered.data <- filtered.data[is.na(filtered.data$annovar_complete_genomics) | filtered.data$annovar_complete_genomics == 0,];
filtered.data <- filtered.data[is.na(filtered.data$annovar_1000g) | filtered.data$annovar_1000g == 0,];
filtered.data <- filtered.data[is.na(filtered.data$annovar_esp) | filtered.data$annovar_esp == 0,];
# filter for normal coverage > 20 and tumour coverage > 40, if there is no normal (i.e. normal_name == 'none')
# filter only on the tumour coverage
filtered.data <- filtered.data[(filtered.data$n_ref_count + filtered.data$n_alt_count) >= 20 | filtered.data$normal_name != 'none',];
filtered.data <- filtered.data[(filtered.data$t_ref_count + filtered.data$t_alt_count) >= 40,];
# currently the dataframe$annovar_target column contains either blanks (meaning the variant is not within
# the given targets) or contains Name=NA (meaning the variant location is found within target file).  keep only
# those mutation which were found in the target (this was how TCAG processed the variants).
filtered.data <- filtered.data[grep(x = filtered.data$annovar_target, pattern = '^Name'),]
return(filtered.data)
}
bmmrd <- filter.mutations(data = bmmrd);
total.mutations <- as.data.frame(table(data$tumor_name));
total.mutations
dim(bmmrd);
data <- bmmrd
total.mutations <- as.data.frame(table(data$tumor_name));
total.mutations
mutation.data <- table(data$tumor_name, data$mutation.trinuc)
mutation.data
mutation.data <- as.data.frame.matrix(prop.table(x = mutation.data, margin = 1))
mutation.data
# create a matrix with sample names on both axes
sample.names <- rownames(mutation.data);
heatmap.data <- data.frame(
matrix(
nrow = nrow(mutation.data),
ncol = nrow(mutation.data)
);
);
colnames(heatmap.data) <- rownames(data);
rownames(heatmap.data) <- rownames(data);
default.heatmap.theme()
plot.object
dim(bmmrd);
dim(data);
mutation.data
sample.names
heatmap.data <- data.frame(
matrix(
nrow = nrow(mutation.data),
ncol = nrow(mutation.data)
);
);
heatmap.data <- data.frame(
matrix(
nrow = nrow(mutation.data),
ncol = nrow(mutation.data)
)
);
heatmap.data
colnames(heatmap.data) <- rownames(data);
rownames(heatmap.data) <- rownames(data);
rownames(data)
head(data);
rownames(mutation.data);
colnames(heatmap.data) <- rownames(mutation.data);
rownames(heatmap.data) <- rownames(mutation.data);
heatmap.data
for(i in 1:nrow(mutation.data)) {
for(j in 1:nrow(mutation.data)) {
heatmap.data[i,j] <- euclidean.distance(
x = as.vector(mutation.data[sample.names[i],]),
y = as.vector(mutation.data[sample.names[j],])
);
}
}
library(statistics.general);
for(i in 1:nrow(mutation.data)) {
for(j in 1:nrow(mutation.data)) {
heatmap.data[i,j] <- euclidean.distance(
x = as.vector(mutation.data[sample.names[i],]),
y = as.vector(mutation.data[sample.names[j],])
);
}
}
heatmap.data
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl'
)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = ''
)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/default.heatmap.theme.R', echo=TRUE)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
?modifyList
source('~/local/src/R/plotting.general/R/default.heatmap.theme.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/.active-rstudio-document', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
theme_bw
theme_grey
theme
source('~/local/src/R/plotting.general/R/default.heatmap.theme.R', echo=TRUE)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
?geom_tile
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
df <- data.frame(expand.grid(1:5,1:5))
df
head(df);
df$z <- runif(nrow(df))
head(df)
df$grp <- rep(letters[1:2],length.out = nrow(df))
head(df)
ggplot(df,aes(x = Var1,y = Var2,fill = factor(grp),alpha = z)) +
geom_tile()
ggplot(df,aes(x = Var1,y = Var2,fill = factor(grp),alpha = z)) +
geom_tile() +
scale_fill_manual(values = c('red','blue'))
ggplot(df,aes(x = Var1,y = Var2,fill = factor(grp),alpha = z)) +
geom_tile() +
scale_fill_manual(values = c('red','blue'))
ggplot(df, aes(x = Var1, y = Var2, fill = factor(grp))) + geom_raster()
ggplot(df, aes(x = Var1, y = Var2, fill = factor(grp), alpha = z)) + geom_raster()
ggplot(df, aes(x = Var1, y = Var2, fill = factor(grp), alpha = z)) + geom_raster() + scale_fill_manual(values = c('red', 'blue'))
scale_colour_brewer(palette="RdYlBu")
?facet_wrap
d <- ggplot(diamonds, aes(carat, price, fill = ..density..)) +
xlim(0, 2) + stat_binhex(na.rm = TRUE) + theme(aspect.ratio = 1)
d + facet_wrap(~ color)
d + facet_wrap(~ color, ncol = 1)
d + facet_wrap(~ color, ncol = 4)
d + facet_wrap(~ color, nrow = 4)
d + facet_wrap(~ color, nrow = 1)
d + facet_wrap(~ color, nrow = 1) + theme(axis.title.x = element_text(angle = -90))
d + facet_wrap(~ color, nrow = 1) + theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust = 0.5))
source('~/local/src/R/plotting.general/R/default.heatmap.theme.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
create.heatmap()
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/default.heatmap.theme.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/default.heatmap.theme.R', echo=TRUE)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
mtcars
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
head(mtcars);
mtcars$car <- rownames(mtcars)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
);
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/default.heatmap.theme.R', echo=TRUE)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/create.heatmap.R', echo=TRUE)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/default.heatmap.theme.R', echo=TRUE)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/default.heatmap.theme.R', echo=TRUE)
create.heatmap(
data = mtcars,
x = 'car',
y = 'cyl',
xlab = '',
ylab = 'Number of Cylinders'
)
source('~/local/src/R/plotting.general/R/default.heatmap.theme.R', echo=TRUE)
library(devtools);
load_all(pkg = '.');
load_all(pkg = '.');
library(testthat);
test_dir('inst/tests');
auto_test(code_path = 'R', test_path = 'inst/tests')
